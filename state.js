class State{constructor(e=null){this.value=e}setDebug(e,t=!0){t&&(window.debug___states=e),this.debug=e}sendDebug(e,t){(window.debug___states||this.debug)&&console.log(`%c${e}`,`color:${t}`)}set(e){this.oldValue=this.value,this.value=e,this.emitChange(),this.sendDebug(`changed to ${JSON.stringify(this.value)}`,"green")}get(){return this.value}emitChange(){this.oldValue!==this.value&&(this.callback(this.value,this.oldValue),this.sendDebug("received change","green")),this.sendDebug("emitted change","green")}addChangeListener(e){this.callback=e}}export default function State(e){return new State(e)}